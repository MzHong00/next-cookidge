@mixin flex-layout($direction, $align: stretch, $justify: flex-start, $gap: 1rem) {
    display: flex;
    flex-direction: $direction;
    align-items: $align;
    justify-content: $justify;
    gap: $gap;
}

@mixin grid-template($flow: column, $value, $gap: 1rem) {
    display: grid;
    gap: $gap;

    @if $flow =="row" {
        grid-template-rows: $value;
    }

    @else if $flow =="column" {
        grid-template-columns: $value;
    }

    @else {
        @error "Invalid value for $flow. Use 'row' or 'column'.";
    }
}

@mixin text-ellipsis {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

@mixin main-button {
    color: rgb(var(--foreground));
    background-color: rgb(var(--color-main)) !important;
    border-radius: var(--border-radius);
    border: none !important;
}

@mixin main-button-dark {
    color: rgb(var(--foreground));
    background-color: rgb(var(--color-dark)) !important;
    border-radius: var(--border-radius);
    border: none !important;
}

@mixin abs-center-x($position: absolute) {
    position: $position;
    left: 50%;
    transform: translateX(-50%);
}

@mixin abs-center-y($position: absolute) {
    position: $position;
    top: 50%;
    transform: translateY(-50%);
}

@mixin abs-center($position: absolute) {
    position: $position;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin skeleton-shimmer {
    background: linear-gradient(90deg, silver 25%, rgb(var(--color-grey-medium)) 50%, silver 75%);
    background-size: 200% 100%;
    animation: shimmer 3s infinite;
}

@keyframes shimmer {
    from {
        background-position: 200% 0;
    }

    to {
        background-position: -200% 0;
    }
}